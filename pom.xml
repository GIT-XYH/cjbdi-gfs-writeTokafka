<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>gfs</artifactId>
    <version>1.0-SNAPSHOT</version>

    <dependencies>
        <dependency>
            <groupId>com.cjbdi</groupId>
            <artifactId>shesu-wsdoc</artifactId>
            <scope>system</scope>
            <version>0.0.1</version>
            <systemPath>${project.basedir}/lib/shesu-wsdoc-0.0.1.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>com.cjbdi</groupId>
            <artifactId>cjbdi-base</artifactId>
            <scope>system</scope>
            <version>0.0.1</version>
            <systemPath>${project.basedir}/lib/cjbdi-base-0.0.1.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>com.cjbdi</groupId>
            <artifactId>cjbdi-gfs</artifactId>
            <scope>system</scope>
            <version>0.0.1</version>
            <systemPath>${project.basedir}/lib/cjbdi-gfs-0.0.1.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>com.cjbdi</groupId>
            <artifactId>cjbdi-fp-docs</artifactId>
            <scope>system</scope>
            <version>0.0.1</version>
            <systemPath>${project.basedir}/lib/cjbdi-fp-docs-0.0.1.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>com.cjbdi</groupId>
            <artifactId>fastjson</artifactId>
            <scope>system</scope>
            <version>1.2.62</version>
            <systemPath>${project.basedir}/lib/fastjson-1.2.62.jar</systemPath>
        </dependency>
    </dependencies>
    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

    <build>
        <resources>
            <resource>
                <!--指定mapping下的所有xml文件打包在jar中-->
                <targetPath>${project.build.directory}/classes</targetPath>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>mapping/*.xml</include>
                </includes>
            </resource>
            <resource>
                <!--resources下一级的所有.xml .properties文件复制到config目录下-->
                <targetPath>${project.build.directory}/config</targetPath>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**.xml</include>
                    <include>**.yml</include>
                    <include>**.properties</include>
                    <include>**.m</include>
                </includes>
            </resource>
            <resource>
                <!--resources下一级的所有.xml .properties文件复制到config目录下-->
                <targetPath>${project.build.directory}/config</targetPath>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>criminalDiscretion/**/*.yml</include>
                    <include>extract/**/*.yml</include>
                    <include>interface/**/*.yml</include>
                    <include>structural/**/*.yml</include>
                    <include>washText/**/*.yml</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <!--maven-dependency插件，将项目所有依赖包放到lib目录下-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <type>jar</type>
                            <includeTypes>jar</includeTypes>
                            <outputDirectory>
                                ${project.build.directory}/lib
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <classesDirectory>target/classes/</classesDirectory>
                    <archive>
                        <!--生成的jar中，不要包含pom.xml和pom.properties这两个文件-->
                        <addMavenDescriptor>false</addMavenDescriptor>
                        <manifest>
                            <mainClass>test.ArgsTest</mainClass>
                            <!-- 打包时 MANIFEST.MF文件不记录的时间戳版本 -->
                            <useUniqueVersions>false</useUniqueVersions>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                        </manifest>
                        <manifestEntries>
                            <!--jar中的MANIFEST.MF文件ClassPath需要添加config目录才能读取到配置文件-->
                            <Class-Path>config/</Class-Path>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>